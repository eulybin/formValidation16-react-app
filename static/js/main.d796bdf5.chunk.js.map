{"version":3,"sources":["hooks/use-input.js","components/BasicForm.js","App.js","index.js"],"names":["initialInputState","value","wasTouched","inputStateReducer","state","action","type","useInput","validateInput","useReducer","inputState","dispatchInput","inputIsValid","hasError","inputWasInvalid","inputChangeHandler","e","target","inputBlurHandler","reset","BasicForm","trim","firstName","firstNameIsValid","firstNameChangeHandler","firstNameBlurHandler","resetFirstName","firstNameHasError","firstNameWasInvalid","lastName","lastNameChangeHandler","lastNameBlurHandler","lastNameHasError","lastNameWasInvalid","lastNameIsValid","resetLastName","includes","email","emailChangeHandler","emailBlurHandler","emailHasError","emailWasInvalid","emailIsValid","resetEmail","formIsValid","onSubmit","preventDefault","console","log","className","htmlFor","id","onChange","onBlur","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"mLAEMA,EAAoB,CAAEC,MAAO,GAAIC,YAAY,GAE7CC,EAAoB,SAACC,EAAOC,GAChC,MAAoB,UAAhBA,EAAOC,KACF,CAAEL,MAAOI,EAAOJ,MAAOC,WAAYE,EAAMF,YAG9B,SAAhBG,EAAOC,KACF,CAAEL,MAAOG,EAAMH,MAAOC,YAAY,GAGvB,UAAhBG,EAAOC,KACF,CAAEL,MAAO,GAAIC,YAAY,GAG3BF,GAqCMO,EAlCE,SAACC,GAChB,MAAoCC,qBAClCN,EACAH,GAFF,mBAAOU,EAAP,KAAmBC,EAAnB,KAKMC,EAAeJ,EAAcE,EAAWT,OACxCY,GAAYD,GAAgBF,EAAWR,WAcvCY,EAAkBD,EAAW,uBAAyB,eAE5D,MAAO,CACLZ,MAAOS,EAAWT,MAClBc,mBAhByB,SAACC,GAC1BL,EAAc,CAAEL,KAAM,QAASL,MAAOe,EAAEC,OAAOhB,SAgB/CiB,iBAbuB,SAACF,GACxBL,EAAc,CAAEL,KAAM,UAatBa,MAVY,WACZR,EAAc,CAAEL,KAAM,WAUtBO,WACAC,kBACAF,iB,OCoDWQ,EApGG,WAChB,MAQIb,GAAS,SAACN,GAAD,MAA4B,KAAjBA,EAAMoB,UAPrBC,EADT,EACErB,MACcsB,EAFhB,EAEEX,aACoBY,EAHtB,EAGET,mBACkBU,EAJpB,EAIEP,iBACOQ,EALT,EAKEP,MACUQ,EANZ,EAMEd,SACiBe,EAPnB,EAOEd,gBAGF,EAQIP,GAAS,SAACN,GAAD,MAA4B,KAAjBA,EAAMoB,UAPrBQ,EADT,EACE5B,MACoB6B,EAFtB,EAEEf,mBACkBgB,EAHpB,EAGEb,iBACUc,EAJZ,EAIEnB,SACiBoB,EALnB,EAKEnB,gBACcoB,EANhB,EAMEtB,aACOuB,EAPT,EAOEhB,MAGF,EAQIZ,GAAS,SAACN,GAAD,OAAWA,EAAMmC,SAAS,QAP9BC,EADT,EACEpC,MACoBqC,EAFtB,EAEEvB,mBACkBwB,EAHpB,EAGErB,iBACUsB,EAJZ,EAIE3B,SACiB4B,EALnB,EAKE3B,gBACc4B,EANhB,EAME9B,aACO+B,EAPT,EAOExB,MAGEyB,GAAc,EAEdrB,GAAoBW,GAAmBQ,IACzCE,GAAc,GAgBhB,OACE,uBAAMC,SAdc,SAAC7B,GACrBA,EAAE8B,iBAEGF,IAILG,QAAQC,IAAI1B,EAAWO,EAAUQ,GACjCX,IACAS,IACAQ,MAIA,UACE,sBAAKM,UAAU,gBAAf,UACE,sBAAKA,UAAWrB,EAAhB,UACE,uBAAOsB,QAAQ,aAAf,wBACA,uBACE5C,KAAK,OACL6C,GAAG,aACHlD,MAAOqB,EACP8B,SAAU5B,EACV6B,OAAQ5B,IAETE,GACC,mBAAGsB,UAAU,aAAb,iDAGJ,sBAAKA,UAAWhB,EAAhB,UACE,uBAAOiB,QAAQ,YAAf,uBACA,uBACE5C,KAAK,OACL6C,GAAG,YACHlD,MAAO4B,EACPuB,SAAUtB,EACVuB,OAAQtB,IAETC,GACC,mBAAGiB,UAAU,aAAb,mDAIN,sBAAKA,UAAWR,EAAhB,UACE,uBAAOS,QAAQ,QAAf,4BACA,uBACE5C,KAAK,OACL6C,GAAG,QACHlD,MAAOoC,EACPe,SAAUd,EACVe,OAAQd,IAETC,GACC,mBAAGS,UAAU,aAAb,4CAGJ,qBAAKA,UAAU,eAAf,SACE,wBAAQK,UAAWV,EAAnB,0BCtFOW,MARf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,cAAC,EAAD,OCANO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.d796bdf5.chunk.js","sourcesContent":["import { useReducer } from \"react\";\n\nconst initialInputState = { value: \"\", wasTouched: false };\n\nconst inputStateReducer = (state, action) => {\n  if (action.type === \"INPUT\") {\n    return { value: action.value, wasTouched: state.wasTouched };\n  }\n\n  if (action.type === \"BLUR\") {\n    return { value: state.value, wasTouched: true };\n  }\n\n  if (action.type === \"RESET\") {\n    return { value: \"\", wasTouched: false };\n  }\n\n  return initialInputState;\n};\n\nconst useInput = (validateInput) => {\n  const [inputState, dispatchInput] = useReducer(\n    inputStateReducer,\n    initialInputState\n  );\n\n  const inputIsValid = validateInput(inputState.value);\n  const hasError = !inputIsValid && inputState.wasTouched;\n\n  const inputChangeHandler = (e) => {\n    dispatchInput({ type: \"INPUT\", value: e.target.value });\n  };\n\n  const inputBlurHandler = (e) => {\n    dispatchInput({ type: \"BLUR\" });\n  };\n\n  const reset = () => {\n    dispatchInput({ type: \"RESET\" });\n  };\n\n  const inputWasInvalid = hasError ? \"form-control invalid\" : \"form-control\";\n\n  return {\n    value: inputState.value,\n    inputChangeHandler,\n    inputBlurHandler,\n    reset,\n    hasError,\n    inputWasInvalid,\n    inputIsValid,\n  };\n};\n\nexport default useInput;\n","import useInput from \"../hooks/use-input\";\n\nconst BasicForm = () => {\n  const {\n    value: firstName,\n    inputIsValid: firstNameIsValid,\n    inputChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName,\n    hasError: firstNameHasError,\n    inputWasInvalid: firstNameWasInvalid,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: lastName,\n    inputChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    hasError: lastNameHasError,\n    inputWasInvalid: lastNameWasInvalid,\n    inputIsValid: lastNameIsValid,\n    reset: resetLastName,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: email,\n    inputChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    hasError: emailHasError,\n    inputWasInvalid: emailWasInvalid,\n    inputIsValid: emailIsValid,\n    reset: resetEmail,\n  } = useInput((value) => value.includes(\"@\"));\n\n  let formIsValid = false;\n\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    console.log(firstName, lastName, email);\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameWasInvalid}>\n          <label htmlFor=\"first-name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"first-name\"\n            value={firstName}\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n          />\n          {firstNameHasError && (\n            <p className=\"error-text\">Please enter a valid first name!</p>\n          )}\n        </div>\n        <div className={lastNameWasInvalid}>\n          <label htmlFor=\"last-name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"last-name\"\n            value={lastName}\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n          />\n          {lastNameHasError && (\n            <p className=\"error-text\">Please enter a valid last name!</p>\n          )}\n        </div>\n      </div>\n      <div className={emailWasInvalid}>\n        <label htmlFor=\"email\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          value={email}\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n        />\n        {emailHasError && (\n          <p className=\"error-text\">Please enter a valid email!</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n","import BasicForm from \"./components/BasicForm\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BasicForm />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}